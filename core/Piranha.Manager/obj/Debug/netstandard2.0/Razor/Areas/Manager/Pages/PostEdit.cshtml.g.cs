#pragma checksum "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1efdfa59886350547e11bdef4a3e882263fe4416"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Manager_Pages_PostEdit), @"mvc.1.0.razor-page", @"/Areas/Manager/Pages/PostEdit.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Areas/Manager/Pages/PostEdit.cshtml", typeof(AspNetCore.Areas_Manager_Pages_PostEdit), @"~/manager/post/{action}/{id}/{postType?}")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 2 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\_ViewImports.cshtml"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#line 3 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#line 4 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\_ViewImports.cshtml"
using Piranha.Manager;

#line default
#line hidden
#line 5 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\_ViewImports.cshtml"
using Piranha.Manager.Controllers;

#line default
#line hidden
#line 6 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\_ViewImports.cshtml"
using Piranha.Manager.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemMetadataAttribute("RouteTemplate", "~/manager/post/{action}/{id}/{postType?}")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1efdfa59886350547e11bdef4a3e882263fe4416", @"/Areas/Manager/Pages/PostEdit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70f7dcc193b6d828fc068d3bbfb8c75e4139a50f", @"/Areas/Manager/Pages/_ViewImports.cshtml")]
    public class Areas_Manager_Pages_PostEdit : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/manager/assets/js/piranha.contentedit.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/manager/assets/js/piranha.postedit.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/manager/pages"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("item"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("item in categories"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("item in tags"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "Partial/_PostSettings", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
  
    ViewBag.Title = Localizer.Page["Edit post"];
    ViewBag.MenuItem = "Pages";
    string action = ((string)RouteData.Values["action"]).ToLower();

#line default
#line hidden
            DefineSection("script", async() => {
                BeginContext(289, 13, true);
                WriteLiteral("\r\n    <script");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 302, "\"", 372, 1);
#line 11 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
WriteAttributeValue("", 308, Url.Content(Piranha.Manager.Editor.EditorScripts.MainScriptUrl), 308, 64, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(373, 23, true);
                WriteLiteral("></script>\r\n    <script");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 396, "\"", 468, 1);
#line 12 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
WriteAttributeValue("", 402, Url.Content(Piranha.Manager.Editor.EditorScripts.EditorScriptUrl), 402, 66, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(469, 16, true);
                WriteLiteral("></script>\r\n    ");
                EndContext();
                BeginContext(485, 70, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1efdfa59886350547e11bdef4a3e882263fe44168282", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(555, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(561, 67, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1efdfa59886350547e11bdef4a3e882263fe44169535", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(628, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
#line 16 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
     if (action == "edit")
    {

#line default
#line hidden
                BeginContext(667, 109, true);
                WriteLiteral("        <script>\r\n            piranha.permissions.load(function () {\r\n                piranha.postedit.load(\"");
                EndContext();
                BeginContext(777, 22, false);
#line 20 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                  Write(RouteData.Values["id"]);

#line default
#line hidden
                EndContext();
                BeginContext(799, 85, true);
                WriteLiteral("\");\r\n                $(\".title input\").focus();\r\n            });\r\n        </script>\r\n");
                EndContext();
#line 24 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
    }
    else if (action == "add")
    {

#line default
#line hidden
                BeginContext(929, 111, true);
                WriteLiteral("        <script>\r\n            piranha.permissions.load(function () {\r\n                piranha.postedit.create(\"");
                EndContext();
                BeginContext(1041, 22, false);
#line 29 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                    Write(RouteData.Values["id"]);

#line default
#line hidden
                EndContext();
                BeginContext(1063, 4, true);
                WriteLiteral("\", \"");
                EndContext();
                BeginContext(1068, 28, false);
#line 29 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                                               Write(RouteData.Values["postType"]);

#line default
#line hidden
                EndContext();
                BeginContext(1096, 85, true);
                WriteLiteral("\");\r\n                $(\".title input\").focus();\r\n            });\r\n        </script>\r\n");
                EndContext();
#line 33 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
    }

#line default
#line hidden
            }
            );
            BeginContext(1191, 166, true);
            WriteLiteral("\r\n<div id=\"postedit\">\r\n    <div class=\"top\">\r\n        <nav aria-label=\"breadcrumb\">\r\n            <ol class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\">");
            EndContext();
            BeginContext(1358, 25, false);
#line 40 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                       Write(Localizer.Menu["Content"]);

#line default
#line hidden
            EndContext();
            BeginContext(1383, 51, true);
            WriteLiteral("</li>\r\n                <li class=\"breadcrumb-item\">");
            EndContext();
            BeginContext(1434, 54, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1efdfa59886350547e11bdef4a3e882263fe441613839", async() => {
                BeginContext(1461, 23, false);
#line 41 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                                                 Write(Localizer.Menu["Pages"]);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1488, 110, true);
            WriteLiteral("</li>\r\n                <li class=\"breadcrumb-item\"><a :href=\"piranha.baseUrl + \'manager/page/edit/\' + blogId\">");
            EndContext();
            BeginContext(1599, 25, false);
#line 42 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                                                                                  Write(Localizer.General["Edit"]);

#line default
#line hidden
            EndContext();
            BeginContext(1624, 82, true);
            WriteLiteral("</a></li>\r\n                <li class=\"breadcrumb-item active\" aria-current=\"page\">");
            EndContext();
            BeginContext(1707, 27, false);
#line 43 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                                                  Write(Localizer.Post["Edit post"]);

#line default
#line hidden
            EndContext();
            BeginContext(1734, 129, true);
            WriteLiteral("</li>\r\n                <li v-if=\"state === \'draft\'\" class=\"badge-item\"><span class=\"badge badge-info\"><i class=\"fas fa-pen\"></i> ");
            EndContext();
            BeginContext(1864, 26, false);
#line 44 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                                                                                                     Write(Localizer.General["Draft"]);

#line default
#line hidden
            EndContext();
            BeginContext(1890, 340, true);
            WriteLiteral(@"</span></li>
            </ol>
        </nav>

        <div class=""container-fluid app"" :class=""{ ready: !loading }"">
            <div class=""top-nav"">
                <button class=""btn btn-primary btn-icon"" data-toggle=""modal"" data-target=""#postSettings"">
                    <i class=""fas fa-cog""></i>
                </button>
");
            EndContext();
#line 53 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                 foreach (var postAction in Piranha.Manager.Actions.PostEdit)
                {

#line default
#line hidden
            BeginContext(2328, 20, true);
            WriteLiteral("                    ");
            EndContext();
            BeginContext(2348, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1efdfa59886350547e11bdef4a3e882263fe441617652", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            BeginWriteTagHelperAttribute();
#line 55 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                       WriteLiteral(postAction.ActionView);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("name", __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2389, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 56 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                }

#line default
#line hidden
            BeginContext(2410, 605, true);
            WriteLiteral(@"            </div>
        </div>
    </div>

    <div class=""container-fluid app"" :class=""{ ready: !loading }"">
        <!-- Content navigation -->
        <ul v-if=""(useBlocks && (editors.length + contentRegions.length > 0)) || editors.length + contentRegions.length > 1"" class=""nav nav-pills nav-pills-card justify-content-center"">
            <li v-if=""useBlocks"" class=""nav-item"">
                <a class=""nav-link"" v-on:click.prevent=""selectRegion({ uid: 'uid-blocks' })"" :class=""{ active: selectedRegion.uid === 'uid-blocks' }"" href=""#"">
                    <i class=""fas fa-pen-alt""></i>");
            EndContext();
            BeginContext(3016, 33, false);
#line 66 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                             Write(Localizer.General["Main content"]);

#line default
#line hidden
            EndContext();
            BeginContext(3049, 1029, true);
            WriteLiteral(@"
                </a>
            </li>
            <li v-for=""editor in editors"" class=""nav-item"">
                <a class=""nav-link"" v-on:click.prevent=""selectRegion(editor)"" :class=""{ active: selectedRegion.uid == editor.uid }"" href=""#"">
                    <i :class=""editor.icon""></i>{{ editor.name }}
                </a>
            </li>
            <li v-for=""region in contentRegions"" class=""nav-item"">
                <a class=""nav-link"" v-on:click.prevent=""selectRegion(region.meta)"" :class=""{ active: selectedRegion.uid == region.meta.uid }"" href=""#"">
                    <i :class=""region.meta.icon""></i>{{ region.meta.name }}
                </a>
            </li>
        </ul>

        <!-- Title -->
        <div class=""card"">
            <div class=""card-body"">
                <div class=""form-group title"">
                    <div class=""row"">
                        <div class=""col"">
                            <input v-model=""title"" type=""text"" class=""form-control form-contro");
            WriteLiteral("l-lg\"");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 4078, "\"", 4126, 1);
#line 87 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
WriteAttributeValue("", 4092, Localizer.Post["Your post title"], 4092, 34, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4127, 274, true);
            WriteLiteral(@">
                        </div>
                    </div>
                    <div class=""row mt-3"">
                        <div class=""col-sm-6"">
                            <div class=""form-group mb-0"">
                                <label style=""display:none"">");
            EndContext();
            BeginContext(4402, 26, false);
#line 93 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                                       Write(Localizer.Post["Category"]);

#line default
#line hidden
            EndContext();
            BeginContext(4428, 166, true);
            WriteLiteral("</label>\r\n                                <select id=\"selectedCategory\" class=\"form-control select2\" v-model=\"selectedCategory\">\r\n                                    ");
            EndContext();
            BeginContext(4594, 68, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1efdfa59886350547e11bdef4a3e882263fe441622993", async() => {
                BeginContext(4643, 10, true);
                WriteLiteral("{{ item }}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4662, 280, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                        <div class=""col-sm-6"">
                            <div class=""form-group mb-0"">
                                <label style=""display:none"">");
            EndContext();
            BeginContext(4943, 22, false);
#line 101 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                                                       Write(Localizer.Post["Tags"]);

#line default
#line hidden
            EndContext();
            BeginContext(4965, 178, true);
            WriteLiteral("</label>\r\n                                <select id=\"selectedTags\" class=\"form-control select2\" multiple=\"multiple\" v-model=\"selectedTags\">\r\n                                    ");
            EndContext();
            BeginContext(5143, 62, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1efdfa59886350547e11bdef4a3e882263fe441625203", async() => {
                BeginContext(5186, 10, true);
                WriteLiteral("{{ item }}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5205, 3092, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Blocks -->
        <div class=""card"" :class=""{ 'd-none': selectedRegion.uid != 'uid-blocks' }"">
            <div class=""card-body"">
                <div class=""blocks"">
                    <a href=""#"" class=""block-add unsortable"" v-on:click.prevent=""piranha.blockpicker.open(piranha.postedit.addBlock, 0)"">
                        <hr>
                        <i class=""fas fa-plus-circle""></i>
                    </a>
                    <div v-for=""(block, index) in blocks"" v-bind:key=""block.meta.uid"">
                        <div :class=""'block ' + block.meta.component + (block.meta.isCollapsed ? ' collapsed' : '')"">
                            <div :id=""'tb-' + block.meta.uid"" class=""component-toolbar""></div>
                            <div class=""block-header"">
                     ");
            WriteLiteral(@"           <div class=""title"">
                                    <i :class=""block.meta.icon""></i><strong>{{ block.meta.name }}</strong> <span v-if=""!block.meta.isGroup && block.meta.isCollapsed"">- {{ block.meta.title }}</span>
                                </div>
                                <div class=""actions"">
                                    <span v-on:click.prevent=""collapseBlock(block)"" class=""btn btn-sm"">
                                        <i v-if=""block.meta.isCollapsed"" class=""fas fa-chevron-down""></i>
                                        <i v-else class=""fas fa-chevron-up""></i>
                                    </span>
                                    <span class=""btn btn-sm handle"">
                                        <i class=""fas fa-ellipsis-v""></i>
                                    </span>
                                    <button v-on:click.prevent=""removeBlock(block)"" class=""btn btn-sm danger block-remove"" tabindex=""-1"">
                              ");
            WriteLiteral(@"          <i class=""fas fa-trash""></i>
                                    </button>
                                </div>
                            </div>
                            <component v-if=""!block.meta.isGroup"" v-bind:is=""block.meta.component"" v-bind:uid=""block.meta.uid"" v-bind:toolbar=""'tb-' + block.meta.uid"" v-bind:model=""block.model"" v-on:update-title='updateBlockTitle($event)'></component>
                            <component v-if=""block.meta.isGroup"" v-bind:is=""block.meta.component"" v-bind:uid=""block.meta.uid"" v-bind:toolbar=""'tb-' + block.meta.uid"" v-bind:model=""block""></component>
                        </div>
                        <a href=""#"" class=""block-add"" v-on:click.prevent=""piranha.blockpicker.open(piranha.postedit.addBlock, index + 1)"">
                            <hr>
                            <i class=""fas fa-plus-circle""></i>
                        </a>
                    </div>
                    <div v-if=""blocks.length == 0"" class=""empty-info"">
       ");
            WriteLiteral("                 <p>");
            EndContext();
            BeginContext(8298, 105, false);
#line 149 "D:\GIT\TheraLang\TheraLang\core\Piranha.Manager\Areas\Manager\Pages\PostEdit.cshtml"
                      Write(Localizer.Post["Welcome to your new post. Click on the button above to add your first block of content!"]);

#line default
#line hidden
            EndContext();
            BeginContext(8403, 925, true);
            WriteLiteral(@"</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Custom Editors -->
        <div class=""card"" :class=""{ 'd-none': selectedRegion.uid != editor.uid }"" v-for=""editor in editors"">
            <div class=""card-body"">
                <div class=""region-center"">
                    <component v-bind:is=""editor.component"" v-bind:uid=""editor.uid"" v-bind:id=""id""></component>
                </div>
            </div>
        </div>

        <!-- Content Regions -->
        <div class=""card"" :class=""{ 'd-none': selectedRegion.uid != region.meta.uid }"" v-for=""region in contentRegions"">
            <div class=""card-body"">
                <div class=""region region-center"">
                    <region v-bind:content=""'post'"" v-bind:type=""typeId"" v-bind:model=""region""></region>
                </div>
            </div>
        </div>
    </div>

    ");
            EndContext();
            BeginContext(9328, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1efdfa59886350547e11bdef4a3e882263fe441631224", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9368, 10, true);
            WriteLiteral("\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ManagerLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PostEditViewModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<PostEditViewModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<PostEditViewModel>)PageContext?.ViewData;
        public PostEditViewModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
