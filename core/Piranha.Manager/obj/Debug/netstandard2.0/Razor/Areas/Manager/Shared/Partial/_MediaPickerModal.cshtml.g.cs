#pragma checksum "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eab1893efe3a7c3baaa4877321c1529570d4e23c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Manager_Shared_Partial__MediaPickerModal), @"mvc.1.0.view", @"/Areas/Manager/Shared/Partial/_MediaPickerModal.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Manager/Shared/Partial/_MediaPickerModal.cshtml", typeof(AspNetCore.Areas_Manager_Shared_Partial__MediaPickerModal))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 2 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\_ViewImports.cshtml"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#line 3 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#line 4 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\_ViewImports.cshtml"
using Piranha.Manager;

#line default
#line hidden
#line 5 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\_ViewImports.cshtml"
using Piranha.Manager.Controllers;

#line default
#line hidden
#line 6 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\_ViewImports.cshtml"
using Piranha.Manager.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eab1893efe3a7c3baaa4877321c1529570d4e23c", @"/Areas/Manager/Shared/Partial/_MediaPickerModal.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70f7dcc193b6d828fc068d3bbfb8c75e4139a50f", @"/Areas/Manager/Shared/_ViewImports.cshtml")]
    public class Areas_Manager_Shared_Partial__MediaPickerModal : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("dropzone needsclick dz-clickable"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(72, 302, true);
            WriteLiteral(@"
<!-- The Modal -->
<div class=""modal modal-panel fade"" id=""mediapicker"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">

            <!-- Modal Header -->
            <div class=""modal-header"">
                <h5 class=""modal-title""><i class=""fas fa-images""></i> ");
            EndContext();
            BeginContext(375, 31, false);
#line 11 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                                                                 Write(Localizer.Media["Select media"]);

#line default
#line hidden
            EndContext();
            BeginContext(406, 1081, true);
            WriteLiteral(@"</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>

            <!-- Modal Body -->
            <div class=""modal-body bg-light"">
                <!-- Pills -->
                <div class=""row"">
                    <div class=""col"">
                        <ul class=""nav nav-pills mb-3"">
                            <li class=""nav-item"">
                                <a class=""nav-link"" :class=""{active: listView}"" v-on:click.prevent=""toggle"" href=""#""><i class=""fas fa-list""></i></a>
                            </li>
                            <li class=""nav-item"">
                                <a class=""nav-link"" :class=""{active: !listView}"" v-on:click.prevent=""toggle"" href=""#""><i class=""fas fa-table""></i></a>
                            </li>
                        </ul>
                    </div>
                    <div class=""col"">");
            WriteLiteral("\r\n                        <div class=\"d-flex flex-row\">\r\n");
            EndContext();
#line 33 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                             if ((await Auth.AuthorizeAsync(User, Permission.MediaAddFolder)).Succeeded)
                            {

#line default
#line hidden
            BeginContext(1624, 97, true);
            WriteLiteral("                            <input v-model=\"folderName\" v-on:keyup.enter=\"savefolder\" type=\"text\"");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 1721, "\"", 1765, 1);
#line 35 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
WriteAttributeValue("", 1735, Localizer.Media["Add folder"], 1735, 30, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1766, 169, true);
            WriteLiteral(" class=\"form-control flex-fill\">\r\n                            <button v-on:click.prevent=\"savefolder\" class=\"btn btn-primary ml-3\"><i class=\"fas fa-plus\"></i></button>\r\n");
            EndContext();
#line 37 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                            }

#line default
#line hidden
            BeginContext(1966, 86, true);
            WriteLiteral("                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n");
            EndContext();
#line 42 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                 if ((await Auth.AuthorizeAsync(User, Permission.MediaAdd)).Succeeded)
                {

#line default
#line hidden
            BeginContext(2159, 112, true);
            WriteLiteral("                    <div id=\"mediapicker-upload-container\" class=\"dropzone-container\">\r\n                        ");
            EndContext();
            BeginContext(2271, 594, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eab1893efe3a7c3baaa4877321c1529570d4e23c9091", async() => {
                BeginContext(2391, 291, true);
                WriteLiteral(@"
                            <input type=""hidden"" name=""Model.ParentId"" v-model=""currentFolderId"" />
                            <div class=""dz-message needsclick text-center"">
                                <span class=""fas fa-cloud-upload-alt""></span>
                                ");
                EndContext();
                BeginContext(2683, 54, false);
#line 49 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                           Write(Localizer.Media["Drop files here or click to upload."]);

#line default
#line hidden
                EndContext();
                BeginContext(2737, 121, true);
                WriteLiteral("\r\n                            </div>\r\n                            <div class=\"file-list\"></div>\r\n                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            BeginAddHtmlAttributeValues(__tagHelperExecutionContext, "action", 1, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#line 45 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
AddHtmlAttributeValue("", 2285, Url.Action("Upload", "MediaApi"), 2285, 33, false);

#line default
#line hidden
            EndAddHtmlAttributeValues(__tagHelperExecutionContext);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2865, 98, true);
            WriteLiteral("\r\n                        <ul class=\"media-list list-unstyled\"></ul>\r\n                    </div>\r\n");
            EndContext();
#line 55 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                }

#line default
#line hidden
            BeginContext(2982, 164, true);
            WriteLiteral("\r\n                <div class=\"form-group mt-3\">\r\n                     <input id=\"mediapickerSearch\" class=\"form-control\" v-model=\"search\" v-on:keyup.enter=\"onEnter\"");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 3146, "\"", 3191, 1);
#line 58 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
WriteAttributeValue("", 3160, Localizer.General["Search..."], 3160, 31, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3192, 249, true);
            WriteLiteral("/>\r\n                </div>\r\n\r\n                <template v-if=\"listView\">\r\n                    <table class=\"table table-borderless table-media\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>");
            EndContext();
            BeginContext(3442, 25, false);
#line 65 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                               Write(Localizer.General["Name"]);

#line default
#line hidden
            EndContext();
            BeginContext(3467, 68, true);
            WriteLiteral("</th>\r\n                                <th class=\"td-medium d-none\">");
            EndContext();
            BeginContext(3536, 25, false);
#line 66 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                                                        Write(Localizer.General["Type"]);

#line default
#line hidden
            EndContext();
            BeginContext(3561, 67, true);
            WriteLiteral("</th>\r\n                                <th class=\"td-small d-none\">");
            EndContext();
            BeginContext(3629, 25, false);
#line 67 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                                                       Write(Localizer.General["Size"]);

#line default
#line hidden
            EndContext();
            BeginContext(3654, 60, true);
            WriteLiteral("</th>\r\n                                <th class=\"td-small\">");
            EndContext();
            BeginContext(3715, 29, false);
#line 68 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                                                Write(Localizer.General["Modified"]);

#line default
#line hidden
            EndContext();
            BeginContext(3744, 2284, true);
            WriteLiteral(@"</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-if=""currentFolderId != null"">
                                <td><a href=""#"" v-on:click.prevent=""load(parentFolderId)""><i class=""fas fa-folder-open""></i>...</a></td>
                                <td class=""d-none""></td>
                                <td class=""d-none""></td>
                                <td></td>
                            </tr>
                            <tr v-for=""folder in filteredFolders"">
                                <td><a href=""#"" v-on:click.prevent=""load(folder.id)""><i class=""fas fa-folder-open""></i>{{ folder.name }}</a></td>
                                <td class=""d-none""></td>
                                <td class=""d-none""></td>
                                <td></td>
                            </tr>
                            <tr v-for=""item in filteredItems"">
                                <td>
       ");
            WriteLiteral(@"                             <a href=""#"" v-on:click.prevent=""select(item)"">
                                        <i v-if=""item.type === 'Audio'"" class=""fas fa-volume-up""></i>
                                        <i v-if=""item.type === 'Document'"" class=""fas fa-file-alt""></i>
                                        <i v-if=""item.type === 'Image'"" class=""fas fa-image""></i>
                                        <i v-if=""item.type === 'Video'"" class=""fas fa-video""></i>
                                        <i v-if=""item.type === 'Resource'"" class=""fas fa-box-open""></i>
                                        {{ item.filename }}
                                    </a>
                                </td>
                                <td class=""d-none"">{{ item.contentType }}</td>
                                <td class=""d-none"">{{ item.size }}</td>
                                <td>{{ item.lastModified }}</td>
                            </tr>
                        </tbody>
      ");
            WriteLiteral("              </table>\r\n                </template>\r\n\r\n                <template v-if=\"!listView\">\r\n                    <div class=\"gallery gallery-sm\">\r\n                        <div class=\"gallery-header\">\r\n                            ");
            EndContext();
            BeginContext(6029, 26, false);
#line 106 "C:\Users\User\Desktop\piranha git\piranha.core\core\Piranha.Manager\Areas\Manager\Shared\Partial\_MediaPickerModal.cshtml"
                       Write(Localizer.Media["Gallery"]);

#line default
#line hidden
            EndContext();
            BeginContext(6055, 2766, true);
            WriteLiteral(@"
                        </div>

                        <a href=""#"" class=""thumbnail"" v-if=""currentFolderId != null"" v-on:click.prevent=""load(parentFolderId)"">
                            <div class=""thumbnail-icon"">
                                <i class=""fas fa-folder-open fa-3x""></i>
                            </div>
                            <p class=""thumbnail-text"">...</p>
                        </a>

                        <a href=""#"" class=""thumbnail"" v-for=""folder in filteredFolders"" v-on:click.prevent=""load(folder.id)"">
                            <div class=""thumbnail-icon"">
                                <i class=""fas fa-folder fa-3x""></i>
                            </div>
                            <p class=""thumbnail-text"">{{ folder.name }}</p>
                        </a>

                        <template v-for=""item in filteredItems"">
                            <a href=""#"" class=""thumbnail"" v-on:click.prevent=""select(item)"">

                                <te");
            WriteLiteral(@"mplate v-if=""item.type === 'Image'"">
                                    <img class=""thumbnail-image"" :src=""getThumbnailUrl(item)"">
                                </template>

                                <template v-else-if=""item.type === 'Document'"">
                                    <div class=""thumbnail-icon"">
                                        <i class=""fas fa-file-alt fa-3x""></i>
                                    </div>
                                </template>

                                <template v-else-if=""item.type === 'Video'"">
                                    <div class=""thumbnail-icon"">
                                        <i class=""fas fa-film fa-3x""></i>
                                    </div>
                                </template>

                                <template v-else-if=""item.type === 'Resource'"">
                                    <div class=""thumbnail-icon"">
                                        <i class=""fas fa-box-open fa-");
            WriteLiteral(@"3x""></i>
                                    </div>
                                </template>

                                <template v-else>
                                    <div class=""thumbnail-icon"">
                                        <i class=""fas fa-file""></i>
                                        <i class=""fas fa-file fa-3x""></i>
                                    </div>
                                </template>

                                <p class=""thumbnail-text"">{{ item.filename }}</p>
                            </a>
                        </template>
                    </div>
                </template>
            </div>
        </div>
    </div>
</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ManagerLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IAuthorizationService Auth { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
